declare i32 @putch(i32)
 declare i32 @putint(i32)
 @e = dso_local global [4 x [2 x i32]] [[2 x i32] [i32 6, i32 7], [2 x i32] [i32 4, i32 5], [2 x i32] [i32 5, i32 6], [2 x i32] [i32 9, i32 10] ] 
 @c = dso_local global [4 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4], [2 x i32] [i32 6, i32 3], [2 x i32] [i32 7, i32 8] ] 
 @b = dso_local constant [8 x i32] [i32 9, i32 2, i32 3, i32 4, i32 1, i32 5, i32 4, i32 0] 
 @a = dso_local global [4 x [2 x i32]] zeroinitializer  
 declare void @memset(i32*, i32, i32)
 define dso_local i32 @main ( ) {
 %n1 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @a, i32 0, i32 0, i32 0
 %n2 = getelementptr [8 x i32], [8 x i32]* @b, i32 0, i32 0
 %n3 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @c, i32 0, i32 0, i32 0
 %n4 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* @e, i32 0, i32 0, i32 0
 %n5 = getelementptr i32, i32* %n4, i32 5
 %n6 = load i32, i32* %n5
 %n7 = getelementptr i32, i32* %n4, i32 1
 %n8 = load i32, i32* %n7
 %n9 = add i32 %n6, %n8
 %n10 = getelementptr i32, i32* %n4, i32 0
 %n11 = load i32, i32* %n10
 %n12 = sub i32 %n9, %n11
 %n13 = getelementptr i32, i32* %n1, i32 4
 %n14 = load i32, i32* %n13
 %n15 = add i32 %n12, %n14
 %n16 = call i32 @putint(i32 %n15)
 %n17 = alloca [4 x [2 x i32]]
 %n18 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %n17, i32 0, i32 0, i32 0
 call void @memset(i32* %n18, i32 0, i32 32)
 %n19 = alloca [8 x i32]
 %n20 = getelementptr [8 x i32], [8 x i32]* %n19, i32 0, i32 0
 call void @memset(i32* %n20, i32 0, i32 32)
 %n21 = getelementptr i32, i32* %n20, i32 0
 store i32 1, i32* %n21
 %n22 = getelementptr i32, i32* %n20, i32 1
 store i32 2, i32* %n22
 %n23 = getelementptr i32, i32* %n20, i32 2
 store i32 3, i32* %n23
 %n24 = getelementptr i32, i32* %n20, i32 3
 store i32 4, i32* %n24
 %n25 = getelementptr i32, i32* %n20, i32 4
 store i32 5, i32* %n25
 %n26 = getelementptr i32, i32* %n20, i32 5
 store i32 6, i32* %n26
 %n27 = getelementptr i32, i32* %n20, i32 6
 store i32 7, i32* %n27
 %n28 = getelementptr i32, i32* %n20, i32 7
 store i32 8, i32* %n28
 %n29 = alloca [4 x [2 x i32]]
 %n30 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %n29, i32 0, i32 0, i32 0
 call void @memset(i32* %n30, i32 0, i32 32)
 %n31 = getelementptr i32, i32* %n30, i32 0
 store i32 1, i32* %n31
 %n32 = getelementptr i32, i32* %n30, i32 1
 store i32 2, i32* %n32
 %n33 = getelementptr i32, i32* %n30, i32 2
 store i32 3, i32* %n33
 %n34 = getelementptr i32, i32* %n30, i32 3
 store i32 4, i32* %n34
 %n35 = getelementptr i32, i32* %n30, i32 4
 store i32 5, i32* %n35
 %n36 = getelementptr i32, i32* %n30, i32 5
 store i32 6, i32* %n36
 %n37 = getelementptr i32, i32* %n30, i32 6
 store i32 7, i32* %n37
 %n38 = getelementptr i32, i32* %n30, i32 7
 store i32 8, i32* %n38
 %n39 = call i32 @putch(i32 10)
 %n40 = alloca [4 x [2 x i32]]
 %n41 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %n40, i32 0, i32 0, i32 0
 call void @memset(i32* %n41, i32 0, i32 32)
 %n42 = getelementptr i32, i32* %n20, i32 6
 %n43 = load i32, i32* %n42
 %n44 = getelementptr i32, i32* %n41, i32 0
 store i32 %n43, i32* %n44
 %n45 = getelementptr i32, i32* %n20, i32 7
 %n46 = load i32, i32* %n45
 %n47 = getelementptr i32, i32* %n41, i32 1
 store i32 %n46, i32* %n47
 %n48 = getelementptr i32, i32* %n41, i32 2
 store i32 3, i32* %n48
 %n49 = getelementptr i32, i32* %n41, i32 3
 store i32 4, i32* %n49
 %n50 = getelementptr i32, i32* %n41, i32 4
 store i32 5, i32* %n50
 %n51 = getelementptr i32, i32* %n41, i32 5
 store i32 6, i32* %n51
 %n52 = getelementptr i32, i32* %n41, i32 6
 store i32 7, i32* %n52
 %n53 = getelementptr i32, i32* %n41, i32 7
 store i32 8, i32* %n53
 %n54 = getelementptr i32, i32* %n41, i32 7
 %n55 = load i32, i32* %n54
 %n56 = getelementptr i32, i32* %n41, i32 0
 %n57 = load i32, i32* %n56
 %n58 = add i32 %n55, %n57
 %n59 = getelementptr i32, i32* %n41, i32 1
 %n60 = load i32, i32* %n59
 %n61 = add i32 %n58, %n60
 %n62 = getelementptr i32, i32* %n18, i32 4
 %n63 = load i32, i32* %n62
 %n64 = add i32 %n61, %n63
 %n65 = call i32 @putint(i32 %n64)
 ret i32 0
 } 